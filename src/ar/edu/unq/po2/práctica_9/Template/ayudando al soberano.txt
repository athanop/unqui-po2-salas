public abstract class CuentaBancaria {
	private String titular;
	private int saldo;
	private List<String> movimientos;
	

	public CuentaBancaria(String titular){
		this.titular=titular;
		this.saldo=0;
		this.movimientos=new ArrayList<String>();
	}
	

	public String getTitular(){ //operacion concreta
		return this.titular;
	}

	public int getSaldo(){ //operacion concreta
		return this.saldo;
	}

	protected void setSaldo(int monto){ //operacion concreta
		this.saldo=monto;
	}
	

	public void agregarMovimientos(String movimiento){ //operacion concreta
		this.movimientos.add(movimiento);
	}
	

	public final void extraer(int monto){
		if(verificarSiEsPosibleExtraer(monto)){ //TEMPLATE
			this.setSaldo(this.getSaldo()-monto);
			this.agregarMovimientos("Extraccion");
		}
	
	}
	
	protected abstract boolean verificarSiEsPosibleExtraer(monto); //operacion primitiva

}

public class CuentaCorriente extends CuentaBancaria {
	private int descubierto;
	

	public CuentaCorriente(String titular, int descubierto){
		super(titular);
		this.descubierto=descubierto;
	}
	

	public int getDescubierto(){ 
		return this.descubierto;
	}
	

	@Override
	protected boolean verificarSiEsPosibleExtraer(monto){
		return this.getSaldo()+this.getDescubierto()>=monto;
	}


}


public class CajaDeAhorro extends CuentaBancaria {
	private int limite;
		
		public CajaDeAhorro(String titular, int limite){
		super(titular);
		this.limite=limite;
	}
	

	public int getLimite(){
		return this.limite;
	}
	


	@Override
	protected boolean verificarSiEsPosibleExtraer(monto){
		return this.getSaldo()>=monto && this.getLimite()>=monto;
	}

}